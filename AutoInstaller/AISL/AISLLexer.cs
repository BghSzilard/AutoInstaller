//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from d:\Siemens\AutoInstaller\AutoInstaller\AISL\AISL.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public partial class AISLLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		FIND=1, AT=2, HAS=3, WITH=4, DEFAULT=5, AS=6, INSTALLATION_PARAMETERS=7, 
		WORD=8, QUOTED_TEXT=9, SEMICOLON=10, COMMA=11, OPEN_PARENTHESIS=12, CLOSE_PARENTHESIS=13, 
		WHITESPACE=14, NEWLINE=15;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"LOWERCASE", "UPPERCASE", "DIGIT", "FIND", "AT", "HAS", "WITH", "DEFAULT", 
		"AS", "INSTALLATION_PARAMETERS", "WORD", "QUOTED_TEXT", "SEMICOLON", "COMMA", 
		"OPEN_PARENTHESIS", "CLOSE_PARENTHESIS", "WHITESPACE", "NEWLINE"
	};


	public AISLLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public AISLLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, null, "'installation_parameters'", 
		null, null, "';'", "','", "'('", "')'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "FIND", "AT", "HAS", "WITH", "DEFAULT", "AS", "INSTALLATION_PARAMETERS", 
		"WORD", "QUOTED_TEXT", "SEMICOLON", "COMMA", "OPEN_PARENTHESIS", "CLOSE_PARENTHESIS", 
		"WHITESPACE", "NEWLINE"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "AISL.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static AISLLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x11', '\xA5', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x3', '\x2', '\x3', '\x2', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x5', 
		'\x5', '\x36', '\n', '\x5', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', 
		'\x3', '\x6', '\x5', '\x6', '<', '\n', '\x6', '\x3', '\a', '\x3', '\a', 
		'\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x5', '\a', '\x44', 
		'\n', '\a', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', 
		'\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x5', '\b', 'N', '\n', '\b', 
		'\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', 
		'\t', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', '\t', 
		'\x3', '\t', '\x3', '\t', '\x3', '\t', '\x5', '\t', '^', '\n', '\t', '\x3', 
		'\n', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x5', '\n', '\x64', '\n', 
		'\n', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', 
		'\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', 
		'\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', 
		'\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', 
		'\v', '\x3', '\v', '\x3', '\v', '\x3', '\f', '\x3', '\f', '\x3', '\f', 
		'\x6', '\f', '\x81', '\n', '\f', '\r', '\f', '\xE', '\f', '\x82', '\x3', 
		'\r', '\x3', '\r', '\a', '\r', '\x87', '\n', '\r', '\f', '\r', '\xE', 
		'\r', '\x8A', '\v', '\r', '\x3', '\r', '\x3', '\r', '\x3', '\xE', '\x3', 
		'\xE', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', '\x3', '\x10', '\x3', 
		'\x11', '\x3', '\x11', '\x3', '\x12', '\x6', '\x12', '\x97', '\n', '\x12', 
		'\r', '\x12', '\xE', '\x12', '\x98', '\x3', '\x12', '\x3', '\x12', '\x3', 
		'\x13', '\x5', '\x13', '\x9E', '\n', '\x13', '\x3', '\x13', '\x3', '\x13', 
		'\x6', '\x13', '\xA2', '\n', '\x13', '\r', '\x13', '\xE', '\x13', '\xA3', 
		'\x3', '\x88', '\x2', '\x14', '\x3', '\x2', '\x5', '\x2', '\a', '\x2', 
		'\t', '\x3', '\v', '\x4', '\r', '\x5', '\xF', '\x6', '\x11', '\a', '\x13', 
		'\b', '\x15', '\t', '\x17', '\n', '\x19', '\v', '\x1B', '\f', '\x1D', 
		'\r', '\x1F', '\xE', '!', '\xF', '#', '\x10', '%', '\x11', '\x3', '\x2', 
		'\x6', '\x3', '\x2', '\x63', '|', '\x3', '\x2', '\x43', '\\', '\x3', '\x2', 
		'\x32', ';', '\x4', '\x2', '\v', '\f', '\"', '\"', '\x2', '\xAF', '\x2', 
		'\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x13', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x15', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x17', '\x3', '\x2', '\x2', '\x2', '\x2', '\x19', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x1B', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x1F', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'!', '\x3', '\x2', '\x2', '\x2', '\x2', '#', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '%', '\x3', '\x2', '\x2', '\x2', '\x3', '\'', '\x3', '\x2', '\x2', 
		'\x2', '\x5', ')', '\x3', '\x2', '\x2', '\x2', '\a', '+', '\x3', '\x2', 
		'\x2', '\x2', '\t', '\x35', '\x3', '\x2', '\x2', '\x2', '\v', ';', '\x3', 
		'\x2', '\x2', '\x2', '\r', '\x43', '\x3', '\x2', '\x2', '\x2', '\xF', 
		'M', '\x3', '\x2', '\x2', '\x2', '\x11', ']', '\x3', '\x2', '\x2', '\x2', 
		'\x13', '\x63', '\x3', '\x2', '\x2', '\x2', '\x15', '\x65', '\x3', '\x2', 
		'\x2', '\x2', '\x17', '\x80', '\x3', '\x2', '\x2', '\x2', '\x19', '\x84', 
		'\x3', '\x2', '\x2', '\x2', '\x1B', '\x8D', '\x3', '\x2', '\x2', '\x2', 
		'\x1D', '\x8F', '\x3', '\x2', '\x2', '\x2', '\x1F', '\x91', '\x3', '\x2', 
		'\x2', '\x2', '!', '\x93', '\x3', '\x2', '\x2', '\x2', '#', '\x96', '\x3', 
		'\x2', '\x2', '\x2', '%', '\xA1', '\x3', '\x2', '\x2', '\x2', '\'', '(', 
		'\t', '\x2', '\x2', '\x2', '(', '\x4', '\x3', '\x2', '\x2', '\x2', ')', 
		'*', '\t', '\x3', '\x2', '\x2', '*', '\x6', '\x3', '\x2', '\x2', '\x2', 
		'+', ',', '\t', '\x4', '\x2', '\x2', ',', '\b', '\x3', '\x2', '\x2', '\x2', 
		'-', '.', '\a', 'H', '\x2', '\x2', '.', '/', '\a', 'K', '\x2', '\x2', 
		'/', '\x30', '\a', 'P', '\x2', '\x2', '\x30', '\x36', '\a', '\x46', '\x2', 
		'\x2', '\x31', '\x32', '\a', 'h', '\x2', '\x2', '\x32', '\x33', '\a', 
		'k', '\x2', '\x2', '\x33', '\x34', '\a', 'p', '\x2', '\x2', '\x34', '\x36', 
		'\a', '\x66', '\x2', '\x2', '\x35', '-', '\x3', '\x2', '\x2', '\x2', '\x35', 
		'\x31', '\x3', '\x2', '\x2', '\x2', '\x36', '\n', '\x3', '\x2', '\x2', 
		'\x2', '\x37', '\x38', '\a', '\x43', '\x2', '\x2', '\x38', '<', '\a', 
		'V', '\x2', '\x2', '\x39', ':', '\a', '\x63', '\x2', '\x2', ':', '<', 
		'\a', 'v', '\x2', '\x2', ';', '\x37', '\x3', '\x2', '\x2', '\x2', ';', 
		'\x39', '\x3', '\x2', '\x2', '\x2', '<', '\f', '\x3', '\x2', '\x2', '\x2', 
		'=', '>', '\a', 'J', '\x2', '\x2', '>', '?', '\a', '\x43', '\x2', '\x2', 
		'?', '\x44', '\a', 'U', '\x2', '\x2', '@', '\x41', '\a', 'j', '\x2', '\x2', 
		'\x41', '\x42', '\a', '\x63', '\x2', '\x2', '\x42', '\x44', '\a', 'u', 
		'\x2', '\x2', '\x43', '=', '\x3', '\x2', '\x2', '\x2', '\x43', '@', '\x3', 
		'\x2', '\x2', '\x2', '\x44', '\xE', '\x3', '\x2', '\x2', '\x2', '\x45', 
		'\x46', '\a', 'Y', '\x2', '\x2', '\x46', 'G', '\a', 'K', '\x2', '\x2', 
		'G', 'H', '\a', 'V', '\x2', '\x2', 'H', 'N', '\a', 'J', '\x2', '\x2', 
		'I', 'J', '\a', 'y', '\x2', '\x2', 'J', 'K', '\a', 'k', '\x2', '\x2', 
		'K', 'L', '\a', 'v', '\x2', '\x2', 'L', 'N', '\a', 'j', '\x2', '\x2', 
		'M', '\x45', '\x3', '\x2', '\x2', '\x2', 'M', 'I', '\x3', '\x2', '\x2', 
		'\x2', 'N', '\x10', '\x3', '\x2', '\x2', '\x2', 'O', 'P', '\a', '\x46', 
		'\x2', '\x2', 'P', 'Q', '\a', 'G', '\x2', '\x2', 'Q', 'R', '\a', 'H', 
		'\x2', '\x2', 'R', 'S', '\a', '\x43', '\x2', '\x2', 'S', 'T', '\a', 'W', 
		'\x2', '\x2', 'T', 'U', '\a', 'N', '\x2', '\x2', 'U', '^', '\a', 'V', 
		'\x2', '\x2', 'V', 'W', '\a', '\x66', '\x2', '\x2', 'W', 'X', '\a', 'g', 
		'\x2', '\x2', 'X', 'Y', '\a', 'h', '\x2', '\x2', 'Y', 'Z', '\a', '\x63', 
		'\x2', '\x2', 'Z', '[', '\a', 'w', '\x2', '\x2', '[', '\\', '\a', 'n', 
		'\x2', '\x2', '\\', '^', '\a', 'v', '\x2', '\x2', ']', 'O', '\x3', '\x2', 
		'\x2', '\x2', ']', 'V', '\x3', '\x2', '\x2', '\x2', '^', '\x12', '\x3', 
		'\x2', '\x2', '\x2', '_', '`', '\a', '\x43', '\x2', '\x2', '`', '\x64', 
		'\a', 'U', '\x2', '\x2', '\x61', '\x62', '\a', '\x63', '\x2', '\x2', '\x62', 
		'\x64', '\a', 'u', '\x2', '\x2', '\x63', '_', '\x3', '\x2', '\x2', '\x2', 
		'\x63', '\x61', '\x3', '\x2', '\x2', '\x2', '\x64', '\x14', '\x3', '\x2', 
		'\x2', '\x2', '\x65', '\x66', '\a', 'k', '\x2', '\x2', '\x66', 'g', '\a', 
		'p', '\x2', '\x2', 'g', 'h', '\a', 'u', '\x2', '\x2', 'h', 'i', '\a', 
		'v', '\x2', '\x2', 'i', 'j', '\a', '\x63', '\x2', '\x2', 'j', 'k', '\a', 
		'n', '\x2', '\x2', 'k', 'l', '\a', 'n', '\x2', '\x2', 'l', 'm', '\a', 
		'\x63', '\x2', '\x2', 'm', 'n', '\a', 'v', '\x2', '\x2', 'n', 'o', '\a', 
		'k', '\x2', '\x2', 'o', 'p', '\a', 'q', '\x2', '\x2', 'p', 'q', '\a', 
		'p', '\x2', '\x2', 'q', 'r', '\a', '\x61', '\x2', '\x2', 'r', 's', '\a', 
		'r', '\x2', '\x2', 's', 't', '\a', '\x63', '\x2', '\x2', 't', 'u', '\a', 
		't', '\x2', '\x2', 'u', 'v', '\a', '\x63', '\x2', '\x2', 'v', 'w', '\a', 
		'o', '\x2', '\x2', 'w', 'x', '\a', 'g', '\x2', '\x2', 'x', 'y', '\a', 
		'v', '\x2', '\x2', 'y', 'z', '\a', 'g', '\x2', '\x2', 'z', '{', '\a', 
		't', '\x2', '\x2', '{', '|', '\a', 'u', '\x2', '\x2', '|', '\x16', '\x3', 
		'\x2', '\x2', '\x2', '}', '\x81', '\x5', '\x3', '\x2', '\x2', '~', '\x81', 
		'\x5', '\x5', '\x3', '\x2', '\x7F', '\x81', '\x5', '\a', '\x4', '\x2', 
		'\x80', '}', '\x3', '\x2', '\x2', '\x2', '\x80', '~', '\x3', '\x2', '\x2', 
		'\x2', '\x80', '\x7F', '\x3', '\x2', '\x2', '\x2', '\x81', '\x82', '\x3', 
		'\x2', '\x2', '\x2', '\x82', '\x80', '\x3', '\x2', '\x2', '\x2', '\x82', 
		'\x83', '\x3', '\x2', '\x2', '\x2', '\x83', '\x18', '\x3', '\x2', '\x2', 
		'\x2', '\x84', '\x88', '\a', '$', '\x2', '\x2', '\x85', '\x87', '\v', 
		'\x2', '\x2', '\x2', '\x86', '\x85', '\x3', '\x2', '\x2', '\x2', '\x87', 
		'\x8A', '\x3', '\x2', '\x2', '\x2', '\x88', '\x89', '\x3', '\x2', '\x2', 
		'\x2', '\x88', '\x86', '\x3', '\x2', '\x2', '\x2', '\x89', '\x8B', '\x3', 
		'\x2', '\x2', '\x2', '\x8A', '\x88', '\x3', '\x2', '\x2', '\x2', '\x8B', 
		'\x8C', '\a', '$', '\x2', '\x2', '\x8C', '\x1A', '\x3', '\x2', '\x2', 
		'\x2', '\x8D', '\x8E', '\a', '=', '\x2', '\x2', '\x8E', '\x1C', '\x3', 
		'\x2', '\x2', '\x2', '\x8F', '\x90', '\a', '.', '\x2', '\x2', '\x90', 
		'\x1E', '\x3', '\x2', '\x2', '\x2', '\x91', '\x92', '\a', '*', '\x2', 
		'\x2', '\x92', ' ', '\x3', '\x2', '\x2', '\x2', '\x93', '\x94', '\a', 
		'+', '\x2', '\x2', '\x94', '\"', '\x3', '\x2', '\x2', '\x2', '\x95', '\x97', 
		'\t', '\x5', '\x2', '\x2', '\x96', '\x95', '\x3', '\x2', '\x2', '\x2', 
		'\x97', '\x98', '\x3', '\x2', '\x2', '\x2', '\x98', '\x96', '\x3', '\x2', 
		'\x2', '\x2', '\x98', '\x99', '\x3', '\x2', '\x2', '\x2', '\x99', '\x9A', 
		'\x3', '\x2', '\x2', '\x2', '\x9A', '\x9B', '\b', '\x12', '\x2', '\x2', 
		'\x9B', '$', '\x3', '\x2', '\x2', '\x2', '\x9C', '\x9E', '\a', '\xF', 
		'\x2', '\x2', '\x9D', '\x9C', '\x3', '\x2', '\x2', '\x2', '\x9D', '\x9E', 
		'\x3', '\x2', '\x2', '\x2', '\x9E', '\x9F', '\x3', '\x2', '\x2', '\x2', 
		'\x9F', '\xA2', '\a', '\f', '\x2', '\x2', '\xA0', '\xA2', '\a', '\xF', 
		'\x2', '\x2', '\xA1', '\x9D', '\x3', '\x2', '\x2', '\x2', '\xA1', '\xA0', 
		'\x3', '\x2', '\x2', '\x2', '\xA2', '\xA3', '\x3', '\x2', '\x2', '\x2', 
		'\xA3', '\xA1', '\x3', '\x2', '\x2', '\x2', '\xA3', '\xA4', '\x3', '\x2', 
		'\x2', '\x2', '\xA4', '&', '\x3', '\x2', '\x2', '\x2', '\x10', '\x2', 
		'\x35', ';', '\x43', 'M', ']', '\x63', '\x80', '\x82', '\x88', '\x98', 
		'\x9D', '\xA1', '\xA3', '\x3', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
